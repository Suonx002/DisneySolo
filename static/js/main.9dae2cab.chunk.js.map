{"version":3,"sources":["redux/reducers/videoReducer.js","redux/reducers/index.js","redux/actions/types.js","redux/store.js","redux/actions/videoActions.js","config.js","redux/reselector/videoSelectors.js","components/video/video-card/VideoCard.js","components/video/video-header-slideshow/VideoHeaderSlideShow.js","components/video/video-grid/VideoGrid.js","components/footer/Footer.js","pages/homepage/HomePage.js","components/video/video-suggestion/VideoSuggestion.js","pages/detailpage/detailpage-content/VideoContent.js","pages/detailpage/VideoDetailPage.js","components/video/video-player/VideoPlayer.js","pages/errorpage/ErrorPage.js","pages/searchpage/SearchPage.js","components/header/Navbar.js","App.js","index.js","img/DisneySolo.png"],"names":["INITIAL_STATE","upcomingVideo","popularVideo","nowPlayingVideo","topRatedVideo","singleVideo","videoPlayer","similarVideo","recommendVideo","fetchVideo","videoError","persistConfig","key","storage","whitelist","rootReducer","combineReducers","video","state","action","type","payload","persistReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","MOVIE_KEY","process","selectVideo","selectPopularVideoItem","createSelector","selectUpcomingVideoItem","selectNowPlayingVideoItem","selectTopRatedVideoItem","selectSingleVideoItem","selectVideoPlayerItem","selectSimilarVideoItem","selectVideeoErrorItem","selectRecommendVideoItem","selectFetchVideoItem","VideoCard","props","imageUrl","title","videoHeader","id","originalUrl","className","gridHeader","gridContainerTitle","to","src","alt","connect","dispatch","getUpcomingVideos","a","async","axios","params","api_key","response","data","results","filter","result","index","console","error","useEffect","arrows","autoplay","autoplaySpeed","waitForAnimate","dots","infinite","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","map","poster_path","VideoGrid","videos","renderTitle","responsive","breakpoint","settings","undefined","Footer","href","target","rel","mapStateToProps","createStructuredSelector","popularVideos","nowPlayingVideos","topRatedVideos","getPopularVideos","page","getNowPlayingVideos","getTopRatedVideos","ownProps","log","getSimilarVideo","videoid","length","videoId","match","getSingleVideo","release_date","split","num","minutes","convertMinsToHours","runtime","genres","genre","name","overview","VideoDetailPage","getVideoPlayer","message","clearError","history","setTimeout","push","allow","frameBorder","allowFullScreen","ErrorPage","class","getRecommendationVideo","getFetchVideo","query","fetchVideos","clearFetchVideos","clearRecommendationVideo","useState","searchInput","setSearchInput","onSubmit","e","preventDefault","placeholder","value","onChange","Navbar","DisneySolo","style","height","width","overflow","App","exact","path","component","HomePage","VideoPlayer","SearchPage","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9dae2cab.chunk.js","sourcesContent":["import {\r\n  GET_UPCOMING_VIDEOS,\r\n  GET_POPULAR_VIDEOS,\r\n  GET_NOW_PLAYING_VIDEOS,\r\n  GET_TOP_RATED_VIDEOS,\r\n  GET_SINGLE_VIDEO,\r\n  GET_VIDEO_PLAYER,\r\n  CLEAR_VIDEO_ERROR,\r\n  GET_ERROR_VIDEO,\r\n  GET_SIMILAR_VIDEOS,\r\n  GET_RECOMMENDATION_VIDEOS,\r\n  FETCH_VIDEOS,\r\n  CLEAR_FETCH_VIDEOS,\r\n  CLEAR_RECOMMENDATION_VIDEOS\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  upcomingVideo: null,\r\n  popularVideo: null,\r\n  nowPlayingVideo: null,\r\n  topRatedVideo: null,\r\n  singleVideo: null,\r\n  videoPlayer: null,\r\n  similarVideo: null,\r\n  recommendVideo: null,\r\n  fetchVideo: null,\r\n  videoError: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_UPCOMING_VIDEOS:\r\n      return {\r\n        ...state,\r\n        upcomingVideo: action.payload\r\n      };\r\n    case GET_POPULAR_VIDEOS:\r\n      return {\r\n        ...state,\r\n        popularVideo: action.payload\r\n      };\r\n    case GET_NOW_PLAYING_VIDEOS:\r\n      return {\r\n        ...state,\r\n        nowPlayingVideo: action.payload\r\n      };\r\n    case GET_TOP_RATED_VIDEOS:\r\n      return {\r\n        ...state,\r\n        topRatedVideo: action.payload\r\n      };\r\n    case GET_SINGLE_VIDEO:\r\n      return {\r\n        ...state,\r\n        singleVideo: action.payload\r\n      };\r\n    case GET_VIDEO_PLAYER:\r\n      return {\r\n        ...state,\r\n        videoPlayer: action.payload\r\n      };\r\n    case GET_SIMILAR_VIDEOS:\r\n      return {\r\n        ...state,\r\n        similarVideo: action.payload\r\n      };\r\n    case GET_ERROR_VIDEO:\r\n      return {\r\n        ...state,\r\n        videoError: action.payload\r\n      };\r\n    case GET_RECOMMENDATION_VIDEOS:\r\n      return {\r\n        ...state,\r\n        recommendVideo: action.payload\r\n      };\r\n    case FETCH_VIDEOS:\r\n      return {\r\n        ...state,\r\n        fetchVideo: action.payload\r\n      };\r\n    case CLEAR_FETCH_VIDEOS:\r\n      return {\r\n        ...state,\r\n        fetchVideo: null\r\n      };\r\n    case CLEAR_VIDEO_ERROR:\r\n      return {\r\n        ...state,\r\n        videoError: null\r\n      };\r\n    case CLEAR_RECOMMENDATION_VIDEOS:\r\n      return {\r\n        ...state,\r\n        recommendVideo: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport videoReducer from './videoReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['video']\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  video: videoReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","export const GET_UPCOMING_VIDEOS = 'GET_UPCOMING_VIDEOS';\r\nexport const GET_POPULAR_VIDEOS = 'GET_POPULAR_VIDEOS';\r\nexport const GET_NOW_PLAYING_VIDEOS = 'GET_NOW_PLAYING_VIDEOS';\r\nexport const GET_TOP_RATED_VIDEOS = 'GET_TOP_RATED_VIDEOS';\r\nexport const GET_SINGLE_VIDEO = 'GET_SINGLE_VIDEO';\r\nexport const GET_VIDEO_PLAYER = 'GET_VIDEO_PLAYER';\r\nexport const GET_SIMILAR_VIDEOS = 'GET_SIMILAR_VIDEOS';\r\nexport const GET_RECOMMENDATION_VIDEOS = 'GET_RECOMMENDATION_VIDEOS';\r\nexport const CLEAR_RECOMMENDATION_VIDEOS = 'CLEAR_RECOMMENDATION_VIDEOS';\r\n\r\nexport const FETCH_VIDEOS = 'FETCH_VIDEOS';\r\nexport const CLEAR_FETCH_VIDEOS = 'CLEAR_FETCH_VIDEOS';\r\n\r\nexport const GET_ERROR_VIDEO = 'GET_ERROR_VIDEO';\r\nexport const CLEAR_VIDEO_ERROR = 'CLEAR_VIDEO_ERROR';\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import axios from 'axios';\r\nimport {\r\n  GET_UPCOMING_VIDEOS,\r\n  GET_POPULAR_VIDEOS,\r\n  GET_NOW_PLAYING_VIDEOS,\r\n  GET_TOP_RATED_VIDEOS,\r\n  GET_SINGLE_VIDEO,\r\n  GET_VIDEO_PLAYER,\r\n  GET_SIMILAR_VIDEOS,\r\n  GET_RECOMMENDATION_VIDEOS,\r\n  GET_ERROR_VIDEO,\r\n  FETCH_VIDEOS,\r\n  CLEAR_FETCH_VIDEOS,\r\n  CLEAR_RECOMMENDATION_VIDEOS,\r\n  CLEAR_VIDEO_ERROR\r\n} from './types';\r\n\r\nimport config from '../../config';\r\n\r\nconst MOVIE_KEY = process.env.MOVIE_KEY || config.MOVIE_KEY;\r\n\r\nexport const getUpcomingVideos = () => async dispatch => {\r\n  try {\r\n    const response = await axios(\r\n      'https://api.themoviedb.org/3/movie/upcoming',\r\n      {\r\n        params: {\r\n          api_key: MOVIE_KEY\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_UPCOMING_VIDEOS,\r\n      payload: response.data.results.filter((result, index) => index < 12)\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const getPopularVideos = () => async dispatch => {\r\n  try {\r\n    const response = await axios('https://api.themoviedb.org/3/movie/popular', {\r\n      params: {\r\n        api_key: MOVIE_KEY,\r\n        page: 2\r\n      }\r\n    });\r\n    // console.log(response);\r\n\r\n    dispatch({\r\n      type: GET_POPULAR_VIDEOS,\r\n      payload: response.data.results\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const getNowPlayingVideos = () => async dispatch => {\r\n  try {\r\n    const response = await axios(\r\n      'https://api.themoviedb.org/3/movie/now_playing',\r\n      {\r\n        params: {\r\n          api_key: MOVIE_KEY\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_NOW_PLAYING_VIDEOS,\r\n      payload: response.data.results\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const getTopRatedVideos = () => async dispatch => {\r\n  try {\r\n    const response = await axios(\r\n      'https://api.themoviedb.org/3/movie/top_rated',\r\n      {\r\n        params: {\r\n          api_key: MOVIE_KEY,\r\n          page: 5\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_TOP_RATED_VIDEOS,\r\n      payload: response.data.results\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const getSingleVideo = id => async dispatch => {\r\n  try {\r\n    const response = await axios(`https://api.themoviedb.org/3/movie/${id}`, {\r\n      params: {\r\n        api_key: MOVIE_KEY\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: GET_SINGLE_VIDEO,\r\n      payload: response.data\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const getVideoPlayer = id => async dispatch => {\r\n  try {\r\n    const response = await axios(\r\n      `https://api.themoviedb.org/3/movie/${id}/videos`,\r\n      {\r\n        params: {\r\n          api_key: MOVIE_KEY\r\n        }\r\n      }\r\n    );\r\n\r\n    // console.log(response);\r\n\r\n    dispatch({\r\n      type: GET_VIDEO_PLAYER,\r\n      payload: response.data.results[0]\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERROR_VIDEO,\r\n      payload: err.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const getSimilarVideos = id => async dispatch => {\r\n  try {\r\n    const response = await axios(\r\n      `https://api.themoviedb.org/3/movie/${id}/similar`,\r\n      {\r\n        params: {\r\n          api_key: MOVIE_KEY\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_SIMILAR_VIDEOS,\r\n      payload: response.data.results\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const getRecommendationVideos = id => async dispatch => {\r\n  try {\r\n    const response = await axios(\r\n      `https://api.themoviedb.org/3/movie/${id}/recommendations`,\r\n      {\r\n        params: {\r\n          api_key: MOVIE_KEY\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_RECOMMENDATION_VIDEOS,\r\n      payload: response.data.results\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const fetchVideos = query => async dispatch => {\r\n  try {\r\n    const response = await axios('https://api.themoviedb.org/3/search/movie', {\r\n      params: {\r\n        api_key: MOVIE_KEY,\r\n        query: query\r\n      }\r\n    });\r\n\r\n    dispatch({\r\n      type: FETCH_VIDEOS,\r\n      payload: response.data.results\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const clearRecommendationVideos = () => {\r\n  return {\r\n    type: CLEAR_RECOMMENDATION_VIDEOS\r\n  };\r\n};\r\n\r\nexport const clearFetchVideos = () => {\r\n  return {\r\n    type: CLEAR_FETCH_VIDEOS\r\n  };\r\n};\r\n\r\nexport const clearError = () => {\r\n  return {\r\n    type: CLEAR_VIDEO_ERROR\r\n  };\r\n};\r\n","export default {\r\n  MOVIE_KEY: '0dce37a12f1b626c44ee433987c9f85d'\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectVideo = state => state.video;\r\n\r\nexport const selectPopularVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.popularVideo\r\n);\r\n\r\nexport const selectUpcomingVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.upcomingVideo\r\n);\r\n\r\nexport const selectNowPlayingVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.nowPlayingVideo\r\n);\r\n\r\nexport const selectTopRatedVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.topRatedVideo\r\n);\r\n\r\nexport const selectSingleVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.singleVideo\r\n);\r\n\r\nexport const selectVideoPlayerItem = createSelector(\r\n  [selectVideo],\r\n  video => video.videoPlayer\r\n);\r\n\r\nexport const selectSimilarVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.similarVideo\r\n);\r\n\r\nexport const selectVideeoErrorItem = createSelector(\r\n  [selectVideo],\r\n  video => video.videoError\r\n);\r\n\r\nexport const selectRecommendVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.recommendVideo\r\n);\r\n\r\nexport const selectFetchVideoItem = createSelector(\r\n  [selectVideo],\r\n  video => video.fetchVideo\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './VideoCard.scss';\r\n\r\nconst VideoCard = props => {\r\n  const { imageUrl, title, videoHeader, id } = props;\r\n\r\n  const originalUrl = videoHeader\r\n    ? 'https://image.tmdb.org/t/p/w1280'\r\n    : 'https://image.tmdb.org/t/p/w342';\r\n\r\n  return (\r\n    <div className={`video-card ${videoHeader ? 'video-header' : ''}`}>\r\n      {props.videoHeader ? <h2 className='video-header-title'>{title}</h2> : ''}\r\n      {props.gridHeader ? <h4 className='video-grid-title'>{title}</h4> : ''}\r\n      {props.gridContainerTitle ? (\r\n        <h4 className='video-grid-container-title'>{title}</h4>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Link to={`/video/${id}`}>\r\n        <img\r\n          src={`${originalUrl}${imageUrl}`}\r\n          alt={props.title}\r\n          className='video-card-image'\r\n        />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n","import React, { useEffect } from 'react';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getUpcomingVideos } from '../../../redux/actions/videoActions';\r\nimport { selectUpcomingVideoItem } from '../../../redux/reselector/videoSelectors';\r\n\r\nimport VideoCard from '../video-card/VideoCard';\r\nimport './VideoHeaderSlideShow.scss';\r\n\r\nconst VideoHeaderSlideShow = props => {\r\n  const { upcomingVideo, getUpcomingVideos } = props;\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    getUpcomingVideos();\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const settings = {\r\n    arrows: true,\r\n    autoplay: true,\r\n    autoplaySpeed: 6000,\r\n    waitForAnimate: true,\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 1000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    centerMode: true,\r\n    centerPadding: '5%'\r\n  };\r\n  return (\r\n    <div className='video-header-slide-show'>\r\n      <Slider {...settings}>\r\n        {upcomingVideo !== null &&\r\n          upcomingVideo.map(video => (\r\n            <VideoCard\r\n              key={video.id}\r\n              title={video.title}\r\n              imageUrl={video.poster_path}\r\n              videoHeader={true}\r\n              id={video.id}\r\n            />\r\n          ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUpcomingVideos: () => dispatch(getUpcomingVideos())\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  upcomingVideo: selectUpcomingVideoItem(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VideoHeaderSlideShow);\r\n","import React from 'react';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nimport VideoCard from '../video-card/VideoCard';\r\nimport './VideoGrid.scss';\r\n\r\nconst VideoGrid = props => {\r\n  const { title, videos } = props;\r\n  const renderTitle = title ? (\r\n    <h2 className='video-grid-title'>{title}</h2>\r\n  ) : null;\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    centerMode: true,\r\n    centerPadding: '3%',\r\n    slidesToShow: 5,\r\n    // slidesToScroll: 5,\r\n\r\n    // focusOnSelect: true,\r\n\r\n    responsive: [\r\n      {\r\n        breakpoint: 1300,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          centerPadding: '4%',\r\n\r\n          // slidesToScroll: 4,\r\n          speed: 500,\r\n          infinite: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1000,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          centerPadding: '5%',\r\n          // slidesToScroll: 3,\r\n          speed: 500\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 700,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          centerPadding: '6%',\r\n\r\n          // slidesToScroll: 2,\r\n          speed: 500\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className='video-grid-container'>\r\n      {renderTitle}\r\n      <Slider {...settings}>\r\n        {videos !== null &&\r\n          videos !== undefined &&\r\n          videos.map(video => (\r\n            <VideoCard\r\n              key={video.id}\r\n              imageUrl={video.poster_path}\r\n              title={video.title}\r\n              gridHeader={true}\r\n              id={video.id}\r\n            />\r\n          ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoGrid;\r\n","import React from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer-container'>\r\n      <div className='footer-create-by'>\r\n        Created By: <span className='footer-name'>Vuthy Suon</span>\r\n      </div>\r\n      <div className='footer-source-code'>\r\n        Source Code:{' '}\r\n        <a\r\n          href='https://github.com/Suonx002/DisneySolo'\r\n          target='_blank'\r\n          rel='noopener noreferrer'>\r\n          <i className='fab fa-github ' />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport {\r\n  getPopularVideos,\r\n  getNowPlayingVideos,\r\n  getTopRatedVideos\r\n} from '../../redux/actions/videoActions';\r\n\r\nimport {\r\n  selectPopularVideoItem,\r\n  selectNowPlayingVideoItem,\r\n  selectTopRatedVideoItem\r\n} from '../../redux/reselector/videoSelectors';\r\n\r\nimport VideoHeaderSlideShow from '../../components/video/video-header-slideshow/VideoHeaderSlideShow';\r\nimport VideoCategory from '../../components/video/video-category/VideoCategory';\r\nimport VideoGrid from '../../components/video/video-grid/VideoGrid';\r\nimport Footer from '../../components/footer/Footer';\r\n\r\nimport './HomePage.scss';\r\n\r\nconst HomePage = props => {\r\n  const {\r\n    getPopularVideos,\r\n    popularVideos,\r\n    getNowPlayingVideos,\r\n    nowPlayingVideos,\r\n    getTopRatedVideos,\r\n    topRatedVideos\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    getPopularVideos();\r\n    getNowPlayingVideos();\r\n    getTopRatedVideos();\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (\r\n    popularVideos === null ||\r\n    nowPlayingVideos === null ||\r\n    topRatedVideos === null\r\n  ) {\r\n    return <h1>Add loading later</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='homepage-container'>\r\n        <VideoHeaderSlideShow />\r\n        {/* <VideoCategory /> */}\r\n        <VideoGrid title='Now Playing' videos={nowPlayingVideos} />\r\n        <VideoGrid title='Most Popular' videos={popularVideos} />\r\n        <VideoGrid title='Top Rated' videos={topRatedVideos} />\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getPopularVideos: () => dispatch(getPopularVideos()),\r\n  getNowPlayingVideos: () => dispatch(getNowPlayingVideos()),\r\n  getTopRatedVideos: () => dispatch(getTopRatedVideos())\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  popularVideos: selectPopularVideoItem,\r\n  nowPlayingVideos: selectNowPlayingVideoItem,\r\n  topRatedVideos: selectTopRatedVideoItem\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { getSimilarVideos } from '../../../redux/actions/videoActions';\r\nimport { selectSimilarVideoItem } from '../../../redux/reselector/videoSelectors';\r\n\r\nimport './VideoSuggestion.scss';\r\n\r\nimport VideoGrid from '../video-grid/VideoGrid';\r\n\r\nconst VideoSuggestion = props => {\r\n  const { videoid, getSimilarVideo, similarVideo } = props;\r\n\r\n  useEffect(() => {\r\n    getSimilarVideo(videoid);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (similarVideo === null) {\r\n    return <h1>Add loading later</h1>;\r\n  }\r\n  return (\r\n    <div className='video-suggestion'>\r\n      {similarVideo !== null &&\r\n        similarVideo !== undefined &&\r\n        similarVideo.length > 0 && (\r\n          <div className='video-suggestion-content'>\r\n            <VideoGrid title='Suggestion' videos={similarVideo} />\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  console.log(ownProps);\r\n  return {\r\n    getSimilarVideo: () => dispatch(getSimilarVideos(ownProps.videoid))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  similarVideo: selectSimilarVideoItem\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoSuggestion);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { selectSingleVideoItem } from '../../../redux/reselector/videoSelectors';\r\nimport { getSingleVideo } from '../../../redux/actions/videoActions';\r\n\r\nimport VideoSuggestion from '../../../components/video/video-suggestion/VideoSuggestion';\r\n\r\nimport './VideoContent.scss';\r\n\r\nconst VideoContent = props => {\r\n  const { match, getSingleVideo, singleVideo } = props;\r\n\r\n  const originalUrl = 'https://image.tmdb.org/t/p/original';\r\n\r\n  useEffect(() => {\r\n    const id = match.params.videoid;\r\n    getSingleVideo(id);\r\n\r\n    //eslint-disable-next-line\r\n  }, [match.params.videoid, getSingleVideo]);\r\n\r\n  const convertMinsToHours = num => {\r\n    const minutes = num % 60;\r\n    const hours = (num - minutes) / 60;\r\n\r\n    return `${hours}h ${minutes}m`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='video-content-container'>\r\n        {singleVideo !== null && singleVideo !== undefined && (\r\n          <>\r\n            <div className='video-content-image'>\r\n              <img\r\n                src={`${originalUrl}${singleVideo.poster_path}`}\r\n                alt={`${singleVideo.title}`}\r\n              />\r\n            </div>\r\n            <div className='video-content-content'>\r\n              <h1 className='video-content-title'>{singleVideo.title}</h1>\r\n              <div className='video-content-actions'>\r\n                <div className='video-content-play-btn'>\r\n                  <Link to={`/watch/${singleVideo.id}`}>\r\n                    <i className='fas fa-play ' /> <span> PLAY </span>\r\n                  </Link>\r\n                </div>\r\n                {/* <div className='video-content-watch-later-btn'>\r\n                  <Link to='/watchlater/:id'>\r\n                    <i className='fas fa-plus-circle fa-2x' />\r\n                  </Link>\r\n                </div> */}\r\n              </div>\r\n              <div className='video-content-info'>\r\n                <div className='video-content-type'>\r\n                  <span className='video-content-runtime'>\r\n                    {singleVideo.release_date.split('-')[0]}\r\n                  </span>\r\n                  <span className='video-content-runtime'>\r\n                    &#8226; {convertMinsToHours(singleVideo.runtime)}\r\n                  </span>\r\n                  <span className='video-content-genres'>\r\n                    &#8226;{' '}\r\n                    {singleVideo.genres.map((genre, index) => (\r\n                      <span\r\n                        className='video-content-genre'\r\n                        key={genre.id}\r\n                        id={genre.id}>\r\n                        {genre.name}\r\n                        {index < singleVideo.genres.length - 1 ? ',\\u00A0' : ''}\r\n                      </span>\r\n                    ))}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className='video-content-overview'>\r\n                <h4 className='video-content-overview-title'>Overview Story</h4>\r\n                {singleVideo.overview}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <VideoSuggestion videoid={match.params.videoid} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const videoId = ownProps.match.params.videoid;\r\n  return {\r\n    getSingleVideo: () => dispatch(getSingleVideo(videoId))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  singleVideo: selectSingleVideoItem\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoContent);\r\n","import React from 'react';\r\nimport VideoContent from './detailpage-content/VideoContent';\r\n\r\nconst VideoDetailPage = props => {\r\n  return <VideoContent match={props.match} />;\r\n};\r\n\r\nexport default VideoDetailPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport {\r\n  selectVideoPlayerItem,\r\n  selectVideeoErrorItem\r\n} from '../../../redux/reselector/videoSelectors';\r\nimport {\r\n  getVideoPlayer,\r\n  clearError\r\n} from '../../../redux/actions/videoActions';\r\n\r\nimport './VideoPlayer.scss';\r\n\r\nconst VideoPlayer = props => {\r\n  const {\r\n    history,\r\n    match,\r\n    videoPlayer,\r\n    getVideoPlayer,\r\n    videoError,\r\n    clearError\r\n  } = props;\r\n  const youtubeEmbed = 'http://youtube.com/embed';\r\n\r\n  console.log(props);\r\n  useEffect(() => {\r\n    getVideoPlayer(match.params.videoid);\r\n\r\n    if (videoError !== null) {\r\n      console.log('inside error');\r\n\r\n      setTimeout(() => {\r\n        clearError();\r\n      }, 2000);\r\n      history.push('/error');\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n  }, [match.params.videoid, getVideoPlayer, videoError]);\r\n\r\n  return (\r\n    <div className='video-player-container'>\r\n      {videoPlayer !== null && videoPlayer !== undefined && (\r\n        <>\r\n          <div className='video-player-back-btn'>\r\n            <Link to={`/video/${match.params.videoid}`}>\r\n              <i className='fas fa-chevron-left' /> {videoPlayer.name}\r\n            </Link>\r\n          </div>\r\n          <iframe\r\n            src={`${youtubeEmbed}/${videoPlayer.key}?rel=0&autoplay=1&mute=1`}\r\n            allow='autoplay'\r\n            frameBorder='0'\r\n            allowFullScreen='allowFull'\r\n            title={videoPlayer.name}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const videoId = ownProps.match.params.videoid;\r\n  console.log(videoId);\r\n  return {\r\n    getVideoPlayer: () => dispatch(getVideoPlayer(videoId)),\r\n    clearError: () => dispatch(clearError())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  videoPlayer: selectVideoPlayerItem,\r\n  videoError: selectVideeoErrorItem\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlayer);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './ErrorPage.scss';\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <div className='error-page'>\r\n      <div className='error-page-btn'>\r\n        <Link to='/'>\r\n          <i class='fas fa-chevron-left' /> Home\r\n        </Link>\r\n      </div>\r\n      <div className='error-page-content'>\r\n        <p>\r\n          Sorry, the following search has no results. Please try again later!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport {\r\n  getRecommendationVideos,\r\n  fetchVideos,\r\n  clearFetchVideos,\r\n  clearRecommendationVideos\r\n} from '../../redux/actions/videoActions';\r\nimport {\r\n  selectRecommendVideoItem,\r\n  selectFetchVideoItem\r\n} from '../../redux/reselector/videoSelectors';\r\n\r\nimport VideoCard from '../../components/video/video-card/VideoCard';\r\n\r\nimport './SearchPage.scss';\r\n\r\nconst SearchPage = props => {\r\n  const {\r\n    getRecommendationVideo,\r\n    recommendVideo,\r\n    getFetchVideo,\r\n    fetchVideo,\r\n    clearFetchVideos,\r\n    clearRecommendationVideo\r\n  } = props;\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    //render videos recommmendation to frozen II\r\n    if (searchInput === '' || fetchVideo === null || fetchVideo === undefined) {\r\n      getRecommendationVideo(330457);\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n  }, [fetchVideo]);\r\n\r\n  const onChange = e => setSearchInput(e.target.value);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    clearFetchVideos();\r\n    clearRecommendationVideo();\r\n\r\n    getFetchVideo(searchInput);\r\n  };\r\n\r\n  return (\r\n    <div className='search-page-container'>\r\n      <form className='search-page-form' onSubmit={onSubmit}>\r\n        <input\r\n          type='text'\r\n          className='search-page-search-input'\r\n          placeholder='Search by title, character, or genre'\r\n          value={searchInput}\r\n          onChange={onChange}\r\n        />\r\n      </form>\r\n      <div className='search-page-content'>\r\n        {fetchVideo === null || fetchVideo === undefined ? (\r\n          <h3 className='search-page-explore'>Explore</h3>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {fetchVideo !== null &&\r\n          fetchVideo !== undefined &&\r\n          fetchVideo.length === 0 && (\r\n            <h3 className='search-page-error'>\r\n              No Results found, please try a different search.\r\n            </h3>\r\n          )}\r\n\r\n        <div className='search-page-grid-container'>\r\n          {recommendVideo !== null &&\r\n            recommendVideo !== undefined &&\r\n            fetchVideo === null &&\r\n            recommendVideo.map(video => (\r\n              <VideoCard\r\n                key={video.id}\r\n                imageUrl={video.poster_path}\r\n                title={video.title}\r\n                gridContainerTitle={true}\r\n                id={video.id}\r\n              />\r\n            ))}\r\n          {fetchVideo !== null &&\r\n            fetchVideo !== undefined &&\r\n            fetchVideo.map(video => (\r\n              <VideoCard\r\n                key={video.id}\r\n                imageUrl={video.poster_path}\r\n                title={video.title}\r\n                gridContainerTitle={true}\r\n                id={video.id}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  console.log(ownProps);\r\n  return {\r\n    getRecommendationVideo: () => dispatch(getRecommendationVideos(330457)),\r\n    getFetchVideo: query => dispatch(fetchVideos(query)),\r\n    clearFetchVideos: () => dispatch(clearFetchVideos()),\r\n    clearRecommendationVideo: () => dispatch(clearRecommendationVideos())\r\n  };\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  recommendVideo: selectRecommendVideoItem,\r\n  fetchVideo: selectFetchVideoItem\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport DisneySolo from '../../img/DisneySolo.png';\r\nimport './Navbar.scss';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='navbar-header'>\r\n      <div className='navbar-logo'>\r\n        <Link to='/' className='navbar-item'>\r\n          <img\r\n            src={DisneySolo}\r\n            alt='logo'\r\n            style={{ height: '100px', width: '100px', overflow: 'hidden' }}\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className='navbar-content'>\r\n        <div className='navbar-pages'>\r\n          <Link to='/' className='navbar-item'>\r\n            <i className='fas fa-home' />{' '}\r\n            <span className='underline'>Home </span>\r\n          </Link>\r\n          <Link to='/search' className='navbar-item'>\r\n            <i className='fas fa-search' />{' '}\r\n            <span className='underline'>Search </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport HomePage from './pages/homepage/HomePage';\r\nimport VideoDetailPage from './pages/detailpage/VideoDetailPage';\r\nimport VideoPlayer from './components/video/video-player/VideoPlayer';\r\nimport ErrorPage from './pages/errorpage/ErrorPage';\r\nimport SearchPage from './pages/searchpage/SearchPage';\r\n\r\nimport Navbar from './components/header/Navbar';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route exact path='/video/:videoid' component={VideoDetailPage} />\r\n        <Route exact path='/watch/:videoid' component={VideoPlayer} />\r\n        <Route exact path='/search' component={SearchPage} />\r\n        <Route exact path='/error' component={ErrorPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport { store, persistor } from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/DisneySolo.f8edf794.png\";"],"sourceRoot":""}